name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-unix:
    name: Test Unix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [stable]
      fail-fast: false
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
    
    - name: Build Unix-specific crates
      run: cargo build --workspace --exclude gpmcp-layer-windows --verbose
    
    - name: Test Unix-specific crates
      run: cargo test --workspace --exclude gpmcp-layer-windows --verbose

  test-windows:
    name: Test Windows
    runs-on: windows-latest
    strategy:
      matrix:
        rust: [stable]
      fail-fast: false
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
    
    - name: Build Windows-specific crates
      run: cargo build --workspace --exclude gpmcp-layer-unix --verbose
    
    - name: Test Windows-specific crates
      run: cargo test --workspace --exclude gpmcp-layer-unix --verbose

  test-cross-platform:
    name: Cross-platform compatibility
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
    
    - name: Build all crates (with stubs)
      run: cargo build --workspace --verbose
    
    - name: Test all crates (with stubs)
      run: cargo test --workspace --verbose

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        components: rustfmt, clippy
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Clippy (Unix-specific)
      run: cargo clippy --workspace --exclude gpmcp-layer-windows --all-targets --all-features -- -D warnings